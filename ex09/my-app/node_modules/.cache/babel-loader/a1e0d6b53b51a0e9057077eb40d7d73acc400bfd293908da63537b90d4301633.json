{"ast":null,"code":"var _jsxFileName = \"/Users/danny_mac/Documents/docker/ex09/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Card from \"./components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [products, setProducts] = useState([]);\n  async function onLoad() {\n    let response = await fetch(\"http://localhost:8081/products\");\n    let responseBody = await response.json();\n    console.log(\"onLoad : \", responseBody);\n    setProducts(responseBody);\n  }\n\n  // 1) 빈 배열인 경우 해당 페이지가 열릴 때 실행(초기화)\n  // 2) 종속배열에 변수가 선언되는 경우 해당 값이 변경될 때 다시 그림\n  useEffect(() => {\n    onLoad();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC0C1\\uD488\\uBAA9\\uB85D \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Card","jsxDEV","_jsxDEV","App","_s","products","setProducts","onLoad","response","fetch","responseBody","json","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","_c","$RefreshReg$"],"sources":["/Users/danny_mac/Documents/docker/ex09/my-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Card from \"./components/Card\";\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n\n  async function onLoad() {\n    let response = await fetch(\"http://localhost:8081/products\");\n    let responseBody = await response.json();\n    console.log(\"onLoad : \", responseBody);\n    setProducts(responseBody);\n  }\n\n  // 1) 빈 배열인 경우 해당 페이지가 열릴 때 실행(초기화)\n  // 2) 종속배열에 변수가 선언되는 경우 해당 값이 변경될 때 다시 그림\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  return (\n    <div>\n      <h1>상품목록 페이지</h1>\n      <hr />\n      <div>\n        {products.map((product) => (\n          <Card />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,eAAeQ,MAAMA,CAAA,EAAG;IACtB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;IAC5D,IAAIC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,YAAY,CAAC;IACtCJ,WAAW,CAACI,YAAY,CAAC;EAC3B;;EAEA;EACA;EACAZ,SAAS,CAAC,MAAM;IACdS,MAAM,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBhB,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNhB,OAAA;MAAAY,QAAA,EACGT,QAAQ,CAACc,GAAG,CAAEC,OAAO,iBACpBlB,OAAA,CAACF,IAAI;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACd,EAAA,CA3BQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}